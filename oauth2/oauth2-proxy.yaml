---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: oauth2-proxy
  template:
    metadata:
      labels:
        k8s-app: oauth2-proxy
    spec:
      containers:
      - name: oauth2-proxy
        image: docker.io/a5huynh/oauth2_proxy:2.2
        imagePullPolicy: Always
        args:
        - --provider=google
        - --pass-access-token
        - --redirect-url=https://{{ .hostname }}/oauth2/callback
        - --authenticated-emails-file=/emails/data.txt
        - --upstream=file:///dev/null
        - --http-address=0.0.0.0:4180
        - --cookie-secure=true
        # Register a new application
        # https://github.com/settings/applications/new
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: oidc-google-setup
              key: client_id
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            configMapKeyRef:
              name: oidc-google-setup
              key: client_secret
        # docker run -ti --rm python:3-alpine python -c 'import secrets,base64; print(base64.b64encode(base64.b64encode(secrets.token_bytes(16))));'
        - name: OAUTH2_PROXY_COOKIE_SECRET
          valueFrom:
            configMapKeyRef:
              name: oidc-google-setup
              key: cookie_secret
        ports:
        - containerPort: 4180
          protocol: TCP
        volumeMounts:
        - name: allowed-emails-volume
          mountPath: /emails
          readOnly: true
      volumes:
        - name: allowed-emails-volume
          configMap:
            name: allowed-emails

---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 4180
  selector:
    k8s-app: oauth2-proxy
